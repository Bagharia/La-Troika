const axios = require('axios');
const BASE_URL = 'http://localhost:5000/api/auth';

async function testExistingUser() {
    try {
        console.log('üß™ Test de connexion avec un utilisateur existant...\n');
        
        // Test 1: Cr√©er un utilisateur de test
        console.log('1Ô∏è‚É£ Cr√©ation d\'un utilisateur de test...');
        const registerData = {
            firstName: 'Test',
            lastName: 'User',
            email: 'testuser@latroika.com',
            password: 'password123',
            phone: '0123456789',
            address: {
                street: '123 Rue Test',
                city: 'Paris',
                postalCode: '75001',
                country: 'France'
            }
        };
        
        try {
            const registerResponse = await axios.post(`${BASE_URL}/register`, registerData);
            console.log('‚úÖ Utilisateur cr√©√©:', registerResponse.data.message);
            console.log('Email:', registerResponse.data.user.email);
        } catch (error) {
            if (error.response?.status === 400 && error.response?.data?.message?.includes('d√©j√† utilis√©')) {
                console.log('‚ÑπÔ∏è Utilisateur existe d√©j√†, on continue...');
            } else {
                console.log('‚ùå Erreur cr√©ation:', error.response?.data?.message || error.message);
                return;
            }
        }
        
        // Test 2: Connexion avec cet utilisateur
        console.log('\n2Ô∏è‚É£ Test de connexion...');
        const loginData = {
            email: 'testuser@latroika.com',
            password: 'password123'
        };
        
        try {
            const loginResponse = await axios.post(`${BASE_URL}/login`, loginData);
            console.log('‚úÖ Connexion r√©ussie:', loginResponse.data.message);
            console.log('Utilisateur:', loginResponse.data.user.email);
            console.log('Token re√ßu:', loginResponse.data.token ? '‚úÖ' : '‚ùå');
            
            const token = loginResponse.data.token;
            
            // Test 3: V√©rification du token
            console.log('\n3Ô∏è‚É£ V√©rification du token...');
            const verifyResponse = await axios.post(`${BASE_URL}/verify`, {}, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            console.log('‚úÖ Token valide:', verifyResponse.data.message);
            
        } catch (error) {
            console.log('‚ùå Erreur connexion:', error.response?.data?.message || error.message);
            if (error.response?.data?.error) {
                console.log('D√©tails:', error.response.data.error);
            }
        }
        
    } catch (error) {
        console.error('‚ùå Erreur g√©n√©rale:', error.message);
    }
}

testExistingUser();
